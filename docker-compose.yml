version: '3.8'

services:

  # --- Central PostgreSQL Database Service ---
  postgres_db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - shared_network

  # --- PgAdmin 4 - PostgreSQL Administration GUI ---
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - shared_network

  # --- N8N Workflow Automation Service ---
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      N8N_HOST: localhost
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://localhost:${N8N_PORT:-5678}/
      GENERIC_TIMEZONE: Europe/Prague

      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres_db
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n_data
      DB_POSTGRESDB_USER: n8n_user
      DB_POSTGRESDB_PASSWORD: ${N8N_DB_PASSWORD}

      N8N_BASIC_AUTH_ACTIVE: "true"
      N8N_BASIC_AUTH_USER: ${N8N_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_PASSWORD}
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - shared_network

volumes:
  postgres_db_data:
  n8n_data:
  pgadmin_data:

networks:
  shared_network: